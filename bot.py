from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, CallbackQueryHandler, filters, ContextTypes
import random
import string
from db_utils import init_db, save_user_data, load_user_data, save_used_referral_code, load_used_referral_codes, load_all_user_data

# Initialize the database
init_db()

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID —Å–æ–æ–±—â–µ–Ω–∏–π –∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
message_data = {}

# –°–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
allowed_users = [583969795]  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

# –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞
def generate_referral_code():
    return ''.join(random.choices(string.ascii_letters + string.digits, k=8))

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
def get_main_menu():
    keyboard = [
        [InlineKeyboardButton("–ë–∞–ª–∞–Ω—Å", callback_data='balance')],
        [InlineKeyboardButton("–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞", callback_data='referrals')],
        [InlineKeyboardButton("–ë—É—Å—Ç", callback_data='boost')],
    ]
    return InlineKeyboardMarkup(keyboard)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ–Ω—é –∑–∞–¥–∞–Ω–∏–π
def get_tasks_menu():
    keyboard = [
        [InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª.–ù–∞–≥—Ä–∞–¥–∞: 5000$FP", callback_data='task_subscribe')],
        [InlineKeyboardButton("–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å 1 –¥—Ä—É–≥–∞.–ù–∞–≥—Ä–∞–¥–∞: 1000$FP", callback_data='task_invite_1')],
        [InlineKeyboardButton("–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å 5 –¥—Ä—É–∑–µ–π.–ù–∞–≥—Ä–∞–¥–∞: 2000$FP", callback_data='task_invite_5')],
        [InlineKeyboardButton("–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å 10 –¥—Ä—É–∑–µ–π.–ù–∞–≥—Ä–∞–¥–∞: 5000$FP", callback_data='task_invite_10')],
        [InlineKeyboardButton("–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å 50 –¥—Ä—É–∑–µ–π.–ù–∞–≥—Ä–∞–¥–∞: 20000$FP", callback_data='task_invite_50')],
        [InlineKeyboardButton("–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å 100 –¥—Ä—É–∑–µ–π.–ù–∞–≥—Ä–∞–¥–∞: 50000$FP", callback_data='task_invite_100')],
        [InlineKeyboardButton("–ü—Ä–∏–ø–∏—Å–∫–∞ –≤ –Ω–∏–∫–µ $FP.–ù–∞–≥—Ä–∞–¥–∞: 10000$FP", callback_data='task_nickname')],
        [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='main_menu')],
    ]
    return InlineKeyboardMarkup(keyboard)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
async def delete_previous_messages(context, chat_id, user_id):
    if user_id in message_data:
        for message_id in message_data[user_id]:
            try:
                await context.bot.delete_message(chat_id, message_id)
            except Exception as e:
                print(f"Error deleting message: {e}")
        message_data[user_id] = []

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.effective_user.id
    username = update.effective_user.username
    args = context.args

    user_data = load_user_data(user_id)
    if not user_data:
        user_data = {
            'username': username,
            'balance': 0,
            'referrals': 0,
            'referral_code': generate_referral_code(),
            'boost_claimed': False,
            'tasks': {
                'subscribe': False,
                'invite_1': False,
                'invite_5': False,
                'invite_10': False,
                'invite_50': False,
                'invite_100': False,
                'nickname': False,
            }
        }
        save_user_data(user_id, user_data)

    if args:
        ref_code = args[0]
        used_referral_codes = load_used_referral_codes()
        if ref_code not in used_referral_codes:
            used_referral_codes[ref_code] = set()

        if user_id not in used_referral_codes[ref_code]:
            for uid, data in load_all_user_data().items():
                if data['referral_code'] == ref_code and uid != user_id:
                    data['referrals'] += 1
                    data['balance'] += 1000
                    save_user_data(uid, data)
                    used_referral_codes[ref_code].add(user_id)
                    save_used_referral_code(ref_code, user_id)
                    break

    reply_markup = get_main_menu()
    main_message = ("""
    üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ FootPunch bot!
    –ë–æ—Ç, —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ –¥–µ—Ç–∞–ª—å–Ω–µ–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –∫–æ–Ω—Ü–µ–ø—Ü–∏–µ–π –∏–≥—Ä—ã –∏ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ –Ω–∞–¥ –±—É–¥—É—â–∏–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏!

    ‚öΩ –ß—Ç–æ —Ç–∞–∫–æ–µ FootPunch?
    FootPunch - –Ω–æ–≤–∞—è –∏ –ø–µ—Ä–≤–∞—è p2e –∏–≥—Ä–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ Ton –ø—Ä–æ —Ñ—É—Ç–±–æ–ª!
    –°–æ–±–∏—Ä–∞–π—Ç–µ –∫–æ–º–∞–Ω–¥—É, —Ç—Ä–µ–Ω–∏—Ä—É–π—Ç–µ –∏–≥—Ä–æ–∫–æ–≤ –∏ —Å–æ—Ä–µ–≤–Ω—É–π—Ç–µ—Å—å —Å –¥—Ä—É–≥–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏!
    –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∏–≥—Ä–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∏ —Ç—Ä–µ–±—É–µ—Ç –º–∞–∫—Å–∏–º—É–º –≤–∞—à–µ–≥–æ –≤–Ω–∏–º–∞–Ω–∏—è.

    ü§î –î–ª—è —á–µ–≥–æ –º–Ω–µ –∏–≥—Ä–∞—Ç—å –≤ —ç—Ç–æ?
    –§–∏—à–∫–∞ –Ω–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ - —Å–æ—Ä–µ–≤–Ω–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è —Å–æ—Å—Ç–∞–≤–ª—è—é—â–∞—è.
    –ì–µ–π–º–ø–ª–µ–π —Å–≤—è–∑–∞–Ω —Å –ø—Ä–æ–∫–∞—á–∫–æ–π –∏–≥—Ä–æ–∫–æ–≤ –≤—ã–±—Ä–∞–Ω–æ–≥–æ –≤–∞–º–∏ –∫–ª—É–±–∞, —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º–∏ –∏ pvp –ø—Ä–æ—Ç–∏–≤–æ—Å—Ç–æ—è–Ω–∏–º–∏.
    –û—Å–Ω–æ–≤–Ω–∞—è –≤–∞–ª—é—Ç–∞ –∏–≥—Ä—ã - $FP, –≤–∞—à —Å–ø–æ—Å–æ–± –∑–∞–ø–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ –Ω–∞–¥ –¥—Ä—É–≥–∏–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏ –∏ –¥–æ–º–∏–Ω–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –ø–æ–ª–µ!
    """
    )
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —Ç–µ–∫—Å—Ç–∞ –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
    photo_message = await update.message.reply_photo(photo=open('main.jpg', 'rb'), caption=main_message, reply_markup=reply_markup)

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ ID —Å–æ–æ–±—â–µ–Ω–∏–π
    message_data[user_id] = [photo_message.message_id]

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
async def button(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()  # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ –∑–∞–ø—Ä–æ—Å –∫–∞–∫ –º–æ–∂–Ω–æ —Ä–∞–Ω—å—à–µ
    user_id = query.from_user.id
    chat_id = query.message.chat_id

    if query.data == 'balance':
        keyboard = [[InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='main_menu')]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        user_data = load_user_data(user_id)
        await context.bot.send_photo(chat_id=chat_id, photo=open('balance.jpg', 'rb'), caption=f"üí≤–í–∞—à –±–∞–ª–∞–Ω—Å: {user_data['balance']} $FP\n\n üí∏–ß—Ç–æ–±—ã —É–≤–µ–ª–∏—á–∏—Ç—å –≤–∞—à –±–∞–ª–∞–Ω—Å –≤—ã–ø–æ–ª–Ω—è–π—Ç–µ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤–æ –≤–∫–ª–∞–¥–∫–µ –ë—É—Å—Ç, –∞ —Ç–∞–∫ –∂–µ –ø—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ —Å–≤–æ–∏—Ö –¥—Ä—É–∑–µ–π.", reply_markup=reply_markup)
    elif query.data == 'referrals':
        user_data = load_user_data(user_id)
        referral_code = user_data['referral_code']
        referral_link = f"https://t.me/FootPunch_bot?start={referral_code}"
        keyboard = [[InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='main_menu')]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await context.bot.send_photo(chat_id=chat_id, photo=open('referrals.jpg', 'rb'), caption="üîó–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞:\n\n""–ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∏ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –≤ –≤–∏–¥–µ:1000 $FP –∑–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞\n""–ß–µ–º –±–æ–ª—å—à–µ –¥—Ä—É–∑–µ–π —Ç—ã –ø—Ä–∏–≥–ª–∞—Å–∏—à—å - —Ç–µ–º –≤—ã—à–µ —Ç–≤–æ—è –Ω–∞–≥—Ä–∞–¥–∞!\n\n"f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—à–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {user_data['referrals']}\n–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: {referral_link}", reply_markup=reply_markup)
    elif query.data == 'boost':
        keyboard = [
            [InlineKeyboardButton("–ö –∑–∞–¥–∞–Ω–∏—è–º", callback_data='tasks_menu')],
            [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='main_menu')]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        boost_message = (
            "üöÄ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ $FP –≤ –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≤–∞–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–¥ –¥—Ä—É–≥–∏–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏. "
        "–ü–æ—Å–ª–µ —Ä–µ–ª–∏–∑–∞ –∏–≥—Ä—ã –±–æ–Ω—É—Å—ã –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –¥—Ä—É–∑–µ–π –±–æ–ª—å—à–µ –Ω–∞—á–∏—Å–ª—è—Ç—å—Å—è –Ω–µ –±—É–¥—É—Ç, —Ç–∞–∫ —á—Ç–æ –Ω–µ —É–ø—É—Å—Ç–∏—Ç–µ —Å–≤–æ–π —à–∞–Ω—Å!\n\n"
        "–ß—Ç–æ–±—ã –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–∫–µ–Ω—ã $FP, –≤–∞–º –Ω—É–∂–Ω–æ:\n\n"
        "1) –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª.\n"
        "2) –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π. –ó–∞ –∫–∞–∂–¥–æ–≥–æ –Ω–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ, –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 1.000 $FP –∞ —Ç–∞–∫–∂–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã.\n\n"
        "‚ö†Ô∏è –ù–µ –∑–∞–±—É–¥—å—Ç–µ: –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞ –∏–≥—Ä—ã —ç—Ç–∞ –∞–∫—Ü–∏—è –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç —Å–≤–æ—ë –¥–µ–π—Å—Ç–≤–∏–µ.\n\n"
        "üöÄ –ö–Ω–æ–ø–∫–∞ '–ë—É—Å—Ç' –ø–æ–∑–≤–æ–ª–∏—Ç –≤–∞–º –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –¥–æ 93.000 $FP –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π –∏ –º–∏—Å—Å–∏–π.\n\n"
        "üîó –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π —Å –ø–æ–º–æ—â—å—é –≤–∞—à–µ–π —É–Ω–∏–∫–∞–ª—å–Ω–æ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏ –∏ –Ω–∞–∫–∞–ø–ª–∏–≤–∞–π—Ç–µ —Ç–æ–∫–µ–Ω—ã $FP –¥–ª—è –µ—â–µ –±–æ–ª–µ–µ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–µ–≥–æ –∏–≥—Ä–æ–≤–æ–≥–æ –æ–ø—ã—Ç–∞."
        )
        await context.bot.send_photo(chat_id=chat_id, photo=open('boost.jpg', 'rb'), caption=boost_message, reply_markup=reply_markup)
    elif query.data == 'tasks_menu':
        reply_markup = get_tasks_menu()
        await context.bot.send_message(chat_id=chat_id, text="–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ:", reply_markup=reply_markup)
    elif query.data.startswith('task_'):
        task_handlers = {
            'task_subscribe': "–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –≤–∞–º –Ω—É–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª: https://t.me/footpunch",
            'task_invite_1': "–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –≤–∞–º –Ω—É–∂–Ω–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –æ–¥–Ω–æ–≥–æ –¥—Ä—É–≥–∞.",
            'task_invite_5': "–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –≤–∞–º –Ω—É–∂–Ω–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å 5 –¥—Ä—É–∑–µ–π.",
            'task_invite_10': "–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –≤–∞–º –Ω—É–∂–Ω–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å 10 –¥—Ä—É–∑–µ–π.",
            'task_invite_50': "–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –≤–∞–º –Ω—É–∂–Ω–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å 50 –¥—Ä—É–∑–µ–π.",
            'task_invite_100': "–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –≤–∞–º –Ω—É–∂–Ω–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å 100 –¥—Ä—É–∑–µ–π.",
            'task_nickname': "–ü–æ—Å—Ç–∞–≤—å—Ç–µ –≤ –Ω–∏–∫ –ø—Ä–∏–ø–∏—Å–∫—É $FP.",
        }
        task_description = task_handlers.get(query.data, "–ó–∞–¥–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        keyboard = [
            [InlineKeyboardButton("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å", callback_data=f'check_{query.data}')],
            [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='tasks_menu')],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await context.bot.send_message(chat_id=chat_id, text=task_description, reply_markup=reply_markup)
    elif query.data.startswith('check_task_'):
        task_check_handlers = {
            'check_task_subscribe': check_task_subscribe,
            'check_task_invite_1': lambda uid, q, c: check_task_invite(uid, 1, 1000, q, c),
            'check_task_invite_5': lambda uid, q, c: check_task_invite(uid, 5, 2000, q, c),
            'check_task_invite_10': lambda uid, q, c: check_task_invite(uid, 10, 5000, q, c),
            'check_task_invite_50': lambda uid, q, c: check_task_invite(uid, 50, 20000, q, c),
            'check_task_invite_100': lambda uid, q, c: check_task_invite(uid, 100, 50000, q, c),
            'check_task_nickname': check_task_nickname,
        }
        task_check_handler = task_check_handlers.get(query.data)
        if task_check_handler:
            await task_check_handler(user_id, query, context)
    elif query.data == 'main_menu':
        reply_markup = get_main_menu()
        main_message = ("""
    üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ FootPunch bot!
    –ë–æ—Ç, —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ –¥–µ—Ç–∞–ª—å–Ω–µ–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –∫–æ–Ω—Ü–µ–ø—Ü–∏–µ–π –∏–≥—Ä—ã –∏ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ –Ω–∞–¥ –±—É–¥—É—â–∏–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏!

    ‚öΩ –ß—Ç–æ —Ç–∞–∫–æ–µ FootPunch?
    FootPunch - –Ω–æ–≤–∞—è –∏ –ø–µ—Ä–≤–∞—è p2e –∏–≥—Ä–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ Ton –ø—Ä–æ —Ñ—É—Ç–±–æ–ª!
    –°–æ–±–∏—Ä–∞–π—Ç–µ –∫–æ–º–∞–Ω–¥—É, —Ç—Ä–µ–Ω–∏—Ä—É–π—Ç–µ –∏–≥—Ä–æ–∫–æ–≤ –∏ —Å–æ—Ä–µ–≤–Ω—É–π—Ç–µ—Å—å —Å –¥—Ä—É–≥–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏!
    –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∏–≥—Ä–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∏ —Ç—Ä–µ–±—É–µ—Ç –º–∞–∫—Å–∏–º—É–º –≤–∞—à–µ–≥–æ –≤–Ω–∏–º–∞–Ω–∏—è.

    ü§î –î–ª—è —á–µ–≥–æ –º–Ω–µ –∏–≥—Ä–∞—Ç—å –≤ —ç—Ç–æ?
    –§–∏—à–∫–∞ –Ω–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ - —Å–æ—Ä–µ–≤–Ω–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è —Å–æ—Å—Ç–∞–≤–ª—è—é—â–∞—è.
    –ì–µ–π–º–ø–ª–µ–π —Å–≤—è–∑–∞–Ω —Å –ø—Ä–æ–∫–∞—á–∫–æ–π –∏–≥—Ä–æ–∫–æ–≤ –≤—ã–±—Ä–∞–Ω–æ–≥–æ –≤–∞–º–∏ –∫–ª—É–±–∞, —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º–∏ –∏ pvp –ø—Ä–æ—Ç–∏–≤–æ—Å—Ç–æ—è–Ω–∏–º–∏.
    –û—Å–Ω–æ–≤–Ω–∞—è –≤–∞–ª—é—Ç–∞ –∏–≥—Ä—ã - $FP, –≤–∞—à —Å–ø–æ—Å–æ–± –∑–∞–ø–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ –Ω–∞–¥ –¥—Ä—É–≥–∏–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏ –∏ –¥–æ–º–∏–Ω–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –ø–æ–ª–µ!
    """
    )
    
        await context.bot.send_photo(chat_id=chat_id, photo=open('main.jpg', 'rb'), caption=main_message, reply_markup=reply_markup)

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ ID –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    message_data[user_id] = [query.message.message_id]

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª
async def check_task_subscribe(user_id, query, context):
    user_data = load_user_data(user_id)
    if not user_data['tasks']['subscribe']:
        if await check_subscription(context, user_id):
            user_data['balance'] += 5000
            user_data['tasks']['subscribe'] = True
            save_user_data(user_id, user_data)
            await context.bot.send_message(chat_id=query.message.chat_id, text="–ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞! –ù–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å –¥–æ–±–∞–≤–ª–µ–Ω–æ 5000 $FP.", reply_markup=get_tasks_menu())
        else:
            await context.bot.send_message(chat_id=query.message.chat_id, text="–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª.", reply_markup=get_tasks_menu())
    else:
        await context.bot.send_message(chat_id=query.message.chat_id, text="–í—ã —É–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ —ç—Ç–æ –∑–∞–¥–∞–Ω–∏–µ.", reply_markup=get_tasks_menu())

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –¥—Ä—É–∑–µ–π
async def check_task_invite(user_id, required_referrals, reward, query, context):
    user_data = load_user_data(user_id)
    task_name = f'invite_{required_referrals}'
    if not user_data['tasks'][task_name]:
        if user_data['referrals'] >= required_referrals:
            user_data['balance'] += reward
            user_data['tasks'][task_name] = True
            save_user_data(user_id, user_data)
            await context.bot.send_message(chat_id=query.message.chat_id, text=f"–ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ! –ù–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å –¥–æ–±–∞–≤–ª–µ–Ω–æ {reward} $FP.", reply_markup=get_tasks_menu())
        else:
            await context.bot.send_message(chat_id=query.message.chat_id, text=f"–ó–∞–¥–∞–Ω–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ. –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –¥—Ä—É–∑–µ–π.", reply_markup=get_tasks_menu())
    else:
        await context.bot.send_message(chat_id=query.message.chat_id, text="–í—ã —É–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ —ç—Ç–æ –∑–∞–¥–∞–Ω–∏–µ.", reply_markup=get_tasks_menu())

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∏–ø–∏—Å–∫–∏ –≤ –Ω–∏–∫–µ
async def check_task_nickname(user_id, query, context):
    user_data = load_user_data(user_id)
    if not user_data['tasks']['nickname']:
        if 'FP' in user_data['username']:
            user_data['balance'] += 10000
            user_data['tasks']['nickname'] = True
            save_user_data(user_id, user_data)
            await context.bot.send_message(chat_id=query.message.chat_id, text="–ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ! –ù–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å –¥–æ–±–∞–≤–ª–µ–Ω–æ 10000 $FP.", reply_markup=get_tasks_menu())
        else:
            await context.bot.send_message(chat_id=query.message.chat_id, text="–ó–∞–¥–∞–Ω–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ. –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∏–ø–∏—Å–∫–∏ FP –≤ –Ω–∏–∫–µ.", reply_markup=get_tasks_menu())
    else:
        await context.bot.send_message(chat_id=query.message.chat_id, text="–í—ã —É–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ —ç—Ç–æ –∑–∞–¥–∞–Ω–∏–µ.", reply_markup=get_tasks_menu())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /list_users –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
async def list_users(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.effective_user.id
    if user_id not in allowed_users:
        await update.message.reply_text("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    all_user_data = load_all_user_data()
    if all_user_data:
        users_list = "\n".join([f"ID: {user_id}, Username: {data['username']}, Referrals: {data['referrals']}" for user_id, data in all_user_data.items()])
        await update.message.reply_text(f"–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n{users_list}")
    else:
        await update.message.reply_text("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∫–æ–º–∞–Ω–¥—ã list_users_footpunchscambot123321&
async def handle_custom_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    if update.message.text.strip() == "list_users_footpunchscambot123321&":
        await list_users(update, context)

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
async def check_subscription(context, user_id):
    channel_id = '@footpunch'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à–µ –∏–º—è –∫–∞–Ω–∞–ª–∞
    try:
        member_status = await context.bot.get_chat_member(chat_id=channel_id, user_id=user_id)
        return member_status.status in ['member', 'administrator', 'creator']
    except Exception as e:
        print(f"Error checking subscription status: {e}")
        return False

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main() -> None:
    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ Application –∏ –ø–µ—Ä–µ–¥–∞—á–∞ —Ç–æ–∫–µ–Ω–∞ –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
    app = ApplicationBuilder().token("7479177364:AAEFNEbwQjPE_uiSZnN02ewW-G4EBZM-aD0").build()

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    app.add_handler(CommandHandler('start', start))
    app.add_handler(MessageHandler(filters.TEXT & filters.Regex('^list_users_footpunchscambot123321&$'), handle_custom_command))
    app.add_handler(CallbackQueryHandler(button))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    app.run_polling()

if __name__ == '__main__':
    main()
